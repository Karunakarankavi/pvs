com.hotelbooking
â”‚
â”œâ”€â”€ controller
â”‚   â”œâ”€â”€ AuthController
â”‚   â”œâ”€â”€ RoomController
â”‚   â”œâ”€â”€ BookingController
â”‚   â”œâ”€â”€ AvailabilityController
â”‚   â””â”€â”€ PaymentController (optional)
â”‚
â”œâ”€â”€ service
â”‚   â”œâ”€â”€ AuthService
â”‚   â”œâ”€â”€ RoomService
â”‚   â”œâ”€â”€ BookingService
â”‚
â”œâ”€â”€ model
â”‚   â”œâ”€â”€ User
â”‚   â”œâ”€â”€ Room
â”‚   â”œâ”€â”€ Booking
â”‚
â”œâ”€â”€ repository
â”‚   â”œâ”€â”€ UserRepository
â”‚   â”œâ”€â”€ RoomRepository
â”‚   â””â”€â”€ BookingRepository
â”‚
â”œâ”€â”€ security
â”‚   â””â”€â”€ SecurityConfig
â”‚
â””â”€â”€ dto
    â””â”€â”€ (Request/Response DTOs)


3. RoomController
Manage room details for the hotel (admin only).

Endpoints:

POST /rooms â€“ Add a new room

GET /rooms â€“ List all rooms

GET /rooms/{id} â€“ Get room by ID

PUT /rooms/{id} â€“ Update room info

DELETE /rooms/{id} â€“ Delete room

4. AvailabilityController
Check available rooms.

Endpoints:

GET /rooms/available?checkIn=yyyy-MM-dd&checkOut=yyyy-MM-dd
â†’ Returns available rooms for the given date range

5. BookingController
Create/view/cancel room bookings.

Endpoints:

POST /bookings
â†’ Book a room (include roomId, check-in, check-out, guests)

GET /bookings/my
â†’ Get bookings of the logged-in user

GET /bookings/{id}
â†’ Get booking details

DELETE /bookings/{id}
â†’ Cancel a booking

6. PaymentController
(Only if you're integrating PayPal or other payment gateway)

Endpoints:

POST /payments/initiate â€“ Start payment

GET /payments/status?bookingId= â€“ Check payment status

ðŸŽ¯ Roles
USER â€“ Can view rooms, check availability, make/cancel bookings

ADMIN â€“ Can manage rooms (CRUD)


